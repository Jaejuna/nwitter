{"version":3,"sources":["firebase.js","routes/profile.js","components/authForm.js","routes/auth.js","components/nweet.js","components/nweetFactory.js","routes/home.js","components/navigation.js","components/router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","refreshUser","userObj","history","useHistory","useState","displayName","newDisplayName","setNewDisplayName","onSubmit","event","a","preventDefault","updateProfile","className","onChange","value","target","type","autoFocus","placeholder","style","marginTop","onClick","signOut","pushState","AuthForm","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","name","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","required","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","marginBottom","faGoogle","faGithub","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","update","src","class","faTrash","faPencilAlt","NweetFactory","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","onSnapshot","snapshot","nweetArray","docs","map","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","from","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fcbb8fb4.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\"\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyABouPV04qUL-LNpOiNNi8WwpdDCWmEvTM\",\r\n  authDomain: \"nwitter-8b1dd.firebaseapp.com\",\r\n  projectId: \"nwitter-8b1dd\",\r\n  storageBucket: \"nwitter-8b1dd.appspot.com\",\r\n  messagingSenderId: \"196690237257\",\r\n  appId: \"1:196690237257:web:145b167a5178f77968ac98\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();","import React, { useState } from 'react';\r\nimport { authService } from '../firebase';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nexport default ({refreshUser, userObj}) => {\r\n  const history = useHistory();\r\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n\r\n  const onLogOutClick = () => {\r\n    authService.signOut();\r\n    history.pushState(\"/\");\r\n  };\r\n\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewDisplayName(value);\r\n  };\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (userObj.displayName !== newDisplayName) {\r\n      await userObj.updateProfile({\r\n        displayName: newDisplayName,\r\n      });\r\n      refreshUser();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <form onSubmit={onSubmit} className=\"profileForm\">\r\n        <input\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          autoFocus\r\n          placeholder=\"Display name\"\r\n          value={newDisplayName}\r\n          className=\"formInput\"\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          value=\"Update Profile\"\r\n          className=\"formBtn\"\r\n          style={{\r\n            marginTop: 10,\r\n          }}\r\n        />\r\n      </form>\r\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n        Log Out\r\n      </span>\r\n    </div>\r\n  );\r\n};","import React, { useState } from \"react\";\r\nimport { authService } from \"../firebase\";\r\n\r\nconst AuthForm = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [newAccount, setNewAccount] = useState(true);\r\n    const [error, setError] = useState(\"\");\r\n    const onChange = (event) => {\r\n    const {\r\n        target: { name, value },\r\n    } = event;\r\n    if (name === \"email\") {\r\n        setEmail(value);\r\n    } else if (name === \"password\") {\r\n        setPassword(value);\r\n    }\r\n    };\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        try {\r\n        let data;\r\n        if (newAccount) {\r\n            data = await authService.createUserWithEmailAndPassword(\r\n            email,\r\n            password\r\n            );\r\n        } else {\r\n            data = await authService.signInWithEmailAndPassword(email, password);\r\n        }\r\n        console.log(data);\r\n        } catch (error) {\r\n        setError(error.message);\r\n        }\r\n    };\r\n    const toggleAccount = () => setNewAccount((prev) => !prev);\r\n    return (\r\n        <>\r\n        <form onSubmit={onSubmit} className =\"container\">\r\n            <input\r\n            name=\"email\"\r\n            type=\"email\"\r\n            placeholder=\"Email\"\r\n            required\r\n            value={email}\r\n            onChange={onChange}\r\n            className=\"authInput\"\r\n            />\r\n            <input\r\n            name=\"password\"\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            required\r\n            value={password}\r\n            onChange={onChange}\r\n            className=\"authInput\"\r\n            />\r\n            <input\r\n            type=\"submit\"\r\n            className=\"authInput\"\r\n            value={newAccount ? \"Create Account\" : \"Sign In\"}\r\n            />\r\n            {error && <span className=\"authError\">{error}</span>}\r\n        </form>\r\n        <span onClick={toggleAccount} className = \"authSwitch\">\r\n            {newAccount ? \"Sign In\" : \"Create Account\"}\r\n        </span>\r\n        </>\r\n    );\r\n};\r\nexport default AuthForm;","import AuthForm from \"components/authForm\";\r\nimport React from \"react\"\r\nimport { authService, firebaseInstance } from \"../firebase\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faTwitter,\r\n  faGoogle,\r\n  faGithub,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\n\r\n\r\nconst Auth = () => {\r\n  const onSocialClick = async (event) => {\r\n      const{\r\n        target:{name},\r\n      } = event;\r\n      let provider;\r\n      if (name ===\"google\"){\r\n        provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n\r\n      }else if (name ===\"github\"){\r\n        provider = new firebaseInstance.auth.GithubAuthProvider();\r\n      }\r\n      await authService.signInWithPopup(provider);\r\n    }\r\n    \r\n  return (\r\n    <div className=\"authContainer\">\r\n      <FontAwesomeIcon\r\n        icon={faTwitter}\r\n        color={\"#04AAFF\"}\r\n        size=\"3x\"\r\n        style={{ marginBottom: 30 }}\r\n      />\r\n      <AuthForm />\r\n      <div className=\"authBtns\">\r\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\r\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\r\n        </button>\r\n        <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\r\n          Continue with Github <FontAwesomeIcon icon={faGithub} />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Auth;","import React, { useState } from \"react\";\r\nimport { dbService, storageService } from \"../firebase\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Nweet = ({ nweetObj, isOwner }) => {\r\n  const [editing, setEditing] = useState(false);\r\n  const [newNweet, setNewNweet] = useState(nweetObj.text);\r\n  const onDeleteClick = async () => {\r\n    const ok = window.confirm(\"Are you sure you want to delete this nweet?\");\r\n    if (ok) {\r\n      await dbService.doc(`nweets/${nweetObj.id}`).delete();\r\n      await storageService.refFromURL(nweetObj.attachmentUrl).delete();\r\n        }\r\n  };\r\n  const toggleEditing = () => setEditing((prev) => !prev);\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    await dbService.doc(`nweets/${nweetObj.id}`).update({\r\n      text: newNweet,\r\n    });\r\n    setEditing(false);\r\n  };\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewNweet(value);\r\n  };\r\n  return (\r\n    <div className = \"nweet\">\r\n      {editing ? (\r\n        <>\r\n          <form onSubmit={onSubmit} className =\"container nweetEdit\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Edit your nweet\"\r\n              value={newNweet}\r\n              required\r\n              autoFocus\r\n              onChange={onChange}\r\n              className =\"formInput\"\r\n            />\r\n            <input type=\"submit\" value=\"Update Nweet\" className =\"formBtn\" />\r\n          </form>\r\n          <button onClick={toggleEditing} className = \"formBtn cancelBtn\">\r\n            Cancel\r\n          </button>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <h4>{nweetObj.text}</h4>\r\n          {nweetObj.attachmentUrl && <img src={nweetObj.attachmentUrl} />}\r\n          {isOwner && (\r\n            <div class=\"nweet__actions\">\r\n              <span onClick={onDeleteClick}>\r\n                <FontAwesomeIcon icon={faTrash} />\r\n              </span>\r\n              <span onClick={toggleEditing}>\r\n                <FontAwesomeIcon icon={faPencilAlt} />\r\n              </span>\r\n            </div>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Nweet;","import React, {useState} from \"react\";\r\nimport {v4 as uuidv4} from \"uuid\";\r\nimport {storageService, dbService} from \"../firebase\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faPlus, faTimes} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst NweetFactory = ({userObj}) => {\r\n    const [nweet, setNweet] = useState(\"\");\r\n    const [attachment, setAttachment] = useState(\"\");\r\n    const onSubmit = async (event) => {\r\n        if (nweet === \"\") {\r\n            return;\r\n        }\r\n        event.preventDefault();\r\n        let attachmentUrl = \"\";\r\n        if (attachment !== \"\") {\r\n            const attachmentRef = storageService\r\n                .ref()\r\n                .child(`${userObj.uid}/${uuidv4()}`);\r\n            const response = await attachmentRef.putString(attachment, \"data_url\");\r\n            attachmentUrl = await response\r\n                .ref\r\n                .getDownloadURL();\r\n        }\r\n        const nweetObj = {\r\n            text: nweet,\r\n            createdAt: Date.now(),\r\n            creatorId: userObj.uid,\r\n            attachmentUrl\r\n        };\r\n        await dbService\r\n            .collection(\"nweets\")\r\n            .add(nweetObj);\r\n        setNweet(\"\");\r\n        setAttachment(\"\");\r\n    };\r\n    const onChange = (event) => {\r\n        const {target: {\r\n                value\r\n            }} = event;\r\n        setNweet(value);\r\n    };\r\n    const onFileChange = (event) => {\r\n        const {target: {\r\n                files\r\n            }} = event;\r\n        const theFile = files[0];\r\n        const reader = new FileReader();\r\n        reader.onloadend = (finishedEvent) => {\r\n            const {currentTarget: {\r\n                    result\r\n                }} = finishedEvent;\r\n            setAttachment(result);\r\n        };\r\n        reader.readAsDataURL(theFile);\r\n    };\r\n    const onClearAttachment = () => setAttachment(\"\");\r\n    return (\r\n        <form onSubmit={onSubmit} className=\"factoryForm\">\r\n            <div className=\"factoryInput__container\">\r\n                <input\r\n                    className=\"factoryInput__input\"\r\n                    value={nweet}\r\n                    onChange={onChange}\r\n                    type=\"text\"\r\n                    placeholder=\"What's on your mind?\"\r\n                    maxLength={120}/>\r\n                <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\"/>\r\n            </div>\r\n            <label for=\"attach-file\" className=\"factoryInput__label\">\r\n                <span>Add photos</span>\r\n                <FontAwesomeIcon icon={faPlus}/>\r\n            </label>\r\n            <input\r\n                id=\"attach-file\"\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                onChange={onFileChange}\r\n                style={{\r\n                    opacity: 0\r\n                }}/> {\r\n                attachment && (\r\n                    <div className=\"factoryForm__attachment\">\r\n                        <img\r\n                            src={attachment}\r\n                            style={{\r\n                                backgroundImage: attachment\r\n                            }}\r\n                        />\r\n                        <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n                            <span>Remove</span>\r\n                            <FontAwesomeIcon icon={faTimes}/>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n        </form>\r\n    );\r\n};\r\nexport default NweetFactory;","import { dbService, storageService } from '../firebase';\r\nimport React, { useEffect, useState } from 'react';\r\nimport Nweet  from '../components/nweet';\r\nimport NweetFactory from 'components/nweetFactory';\r\n\r\nconst Home = ({userObj}) => {\r\n  const [nweets, setNweets] = useState([]);\r\n\r\n  useEffect(() => {\r\n    dbService.collection(\"nweets\").onSnapshot((snapshot) => {\r\n      const nweetArray = snapshot.docs.map((doc) => ({\r\n        id: doc.id,\r\n        ...doc.data(),\r\n      }));\r\n      setNweets(nweetArray);\r\n    });\r\n  }, []);\r\n\r\n  return(\r\n    <div className = \"container\">\r\n      <NweetFactory userObj ={userObj} />\r\n      <div style = {{ marginTop :30}}>\r\n        {nweets.map((nweet) => (\r\n          <Nweet\r\n          key={nweet.id}\r\n          nweetObj={nweet}\r\n          isOwner={nweet.creatorId === userObj.uid}\r\n        />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Home;","import React from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faTwitter} from \"@fortawesome/free-brands-svg-icons\";\r\nimport {faUser} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Navigation = ({ userObj }) => (\r\n  <nav>\r\n    <ul style ={{display: \"flex\", justifyContent: \"center\", marginTop: 50}}>\r\n      <li>\r\n        <Link to=\"/\" style={{ marginRight: 10 }}>\r\n          <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\r\n        </Link>\r\n      </li>\r\n      <li>\r\n        <Link to=\"/profile\"style={{\r\n            marginLeft: 10,\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n            fontSize: 12,\r\n          }}\r\n        >\r\n          <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\r\n          <span style={{ marginTop: 10 }}>\r\n            {userObj.displayName\r\n              ? `${userObj.displayName}의 Profile`\r\n              : \"Profile\"}\r\n          </span>\r\n        </Link>\r\n      </li>\r\n    </ul>\r\n  </nav>\r\n);\r\nexport default Navigation;","import React from \"react\";\r\nimport {HashRouter as Router, Route, Switch, Redirect} from \"react-router-dom\";\r\nimport Profile from \"routes/profile\";\r\nimport Auth from \"../routes/auth\";\r\nimport Home from \"../routes/home\";\r\nimport Navigation from \"./navigation\";\r\n\r\n\r\nconst AppRouter = ({refreshUser, isLoggedIn, userObj}) => {\r\n  return (\r\n    <Router>\r\n      {isLoggedIn && <Navigation userObj={userObj}/>}\r\n      <Switch>\r\n        {isLoggedIn ? (\r\n          <div\r\n            style={{\r\n              maxWidth: 890,\r\n              width: \"100%\",\r\n              margin: \"0 auto\",\r\n              marginTop: 80,\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <Route exact path=\"/\">\r\n              <Home userObj = {userObj} />\r\n            </Route>\r\n            <Route exact path=\"/profile\">\r\n              <Profile userObj={userObj} refreshUser={refreshUser} />\r\n            </Route>\r\n            <Redirect from =\"*\" to=\"/\"/>\r\n          </div>\r\n        ) : (\r\n          <>\r\n          <Route exact path=\"/\">\r\n            <Auth />\r\n          </Route>\r\n          <Redirect from =\"*\" to=\"/\"/>\r\n          </>\r\n        )}\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\nexport default AppRouter;","import React, { useEffect, useState } from 'react';\r\nimport { authService } from '../firebase';\r\nimport AppRouter from './router';\r\n\r\nfunction App() {\r\n  const [init, setInit] = useState(false);\r\n  const [userObj, setUserObj] = useState(null);\r\n  useEffect(() => {\r\n    authService.onAuthStateChanged((user) => {\r\n      if (user) {\r\n        setUserObj({\r\n          displayName: user.displayName,\r\n          uid: user.uid,\r\n          updateProfile: (args) => user.updateProfile(args),\r\n        });\r\n      } else {\r\n        setUserObj(null);\r\n      }\r\n      setInit(true);\r\n    });\r\n  }, []);\r\n\r\n  const refreshUser = () => {\r\n    const user = authService.currentUser;\r\n    setUserObj({\r\n      displayName: user.displayName,\r\n      uid: user.uid,\r\n      updateProfile: (args) => user.updateProfile(args),\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {init ? (\r\n          <AppRouter\r\n          refreshUser={refreshUser}\r\n          isLoggedIn={Boolean(userObj)}\r\n          userObj={userObj}\r\n        />\r\n      ) : (\r\n        \"Initializing...\"\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App'; \r\nimport \"./styles.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n); \r\n\r\n"],"sourceRoot":""}