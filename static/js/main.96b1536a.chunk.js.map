{"version":3,"sources":["firebase.js","routes/profile.js","components/authForm.js","routes/auth.js","components/nweet.js","components/nweetFactory.js","routes/home.js","components/navigation.js","components/router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","refreshUser","userObj","history","useHistory","useState","displayName","newDisplayName","setNewDisplayName","onSubmit","event","a","preventDefault","updateProfile","onChange","value","target","type","placeholder","onClick","signOut","pushState","AuthForm","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","name","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","className","required","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","update","autoFocus","src","class","icon","faTrash","faPencilAlt","NweetFactory","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","style","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","onSnapshot","snapshot","nweetArray","docs","map","Navigation","display","justifyContent","marginTop","to","marginRight","faTwitter","color","size","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","exact","path","from","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","getFullYear","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.96b1536a.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\"\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyABouPV04qUL-LNpOiNNi8WwpdDCWmEvTM\",\r\n  authDomain: \"nwitter-8b1dd.firebaseapp.com\",\r\n  projectId: \"nwitter-8b1dd\",\r\n  storageBucket: \"nwitter-8b1dd.appspot.com\",\r\n  messagingSenderId: \"196690237257\",\r\n  appId: \"1:196690237257:web:145b167a5178f77968ac98\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();","import React, { useState } from 'react';\r\nimport { authService } from '../firebase';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nexport default ({refreshUser, userObj}) => {\r\n  const history = useHistory();\r\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n\r\n  const onLogOutClick = () => {\r\n    authService.signOut();\r\n    history.pushState(\"/\");\r\n  };\r\n\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewDisplayName(value);\r\n  };\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (userObj.displayName !== newDisplayName) {\r\n      await userObj.updateProfile({\r\n        displayName: newDisplayName,\r\n      });\r\n      refreshUser();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>  \r\n      <form onSubmit={onSubmit}>\r\n          <input\r\n            onChange={onChange}\r\n            type=\"text\"\r\n            placeholder=\"Display name\"\r\n            value={newDisplayName}\r\n          />\r\n          <input type=\"submit\" value=\"Update Profile\" />\r\n        </form>\r\n      <button onClick = {onLogOutClick} >Log out </button> \r\n    </>\r\n  );\r\n};","import React, { useState } from \"react\";\r\nimport { authService } from \"../firebase\";\r\n\r\nconst AuthForm = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [newAccount, setNewAccount] = useState(true);\r\n    const [error, setError] = useState(\"\");\r\n    const onChange = (event) => {\r\n    const {\r\n        target: { name, value },\r\n    } = event;\r\n    if (name === \"email\") {\r\n        setEmail(value);\r\n    } else if (name === \"password\") {\r\n        setPassword(value);\r\n    }\r\n    };\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        try {\r\n        let data;\r\n        if (newAccount) {\r\n            data = await authService.createUserWithEmailAndPassword(\r\n            email,\r\n            password\r\n            );\r\n        } else {\r\n            data = await authService.signInWithEmailAndPassword(email, password);\r\n        }\r\n        console.log(data);\r\n        } catch (error) {\r\n        setError(error.message);\r\n        }\r\n    };\r\n    const toggleAccount = () => setNewAccount((prev) => !prev);\r\n    return (\r\n        <>\r\n        <form onSubmit={onSubmit} className =\"container\">\r\n            <input\r\n            name=\"email\"\r\n            type=\"email\"\r\n            placeholder=\"Email\"\r\n            required\r\n            value={email}\r\n            onChange={onChange}\r\n            className=\"authInput\"\r\n            />\r\n            <input\r\n            name=\"password\"\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            required\r\n            value={password}\r\n            onChange={onChange}\r\n            className=\"authInput\"\r\n            />\r\n            <input\r\n            type=\"submit\"\r\n            className=\"authInput\"\r\n            value={newAccount ? \"Create Account\" : \"Sign In\"}\r\n            />\r\n            {error && <span className=\"authError\">{error}</span>}\r\n        </form>\r\n        <span onClick={toggleAccount} className = \"authSwitch\">\r\n            {newAccount ? \"Sign In\" : \"Create Account\"}\r\n        </span>\r\n        </>\r\n    );\r\n};\r\nexport default AuthForm;","import AuthForm from \"components/authForm\";\r\nimport React from \"react\"\r\nimport { authService, firebaseInstance } from \"../firebase\";\r\n\r\n\r\nconst Auth = () => {\r\n  const onSocialClick = async (event) => {\r\n      const{\r\n        target:{name},\r\n      } = event;\r\n      let provider;\r\n      if (name ===\"google\"){\r\n        provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n\r\n      }else if (name ===\"github\"){\r\n        provider = new firebaseInstance.auth.GithubAuthProvider();\r\n      }\r\n      await authService.signInWithPopup(provider);\r\n    }\r\n    \r\n  return (\r\n    <div>\r\n      <AuthForm />\r\n    <div>\r\n        <button onClick={onSocialClick} name=\"google\">Continue with Google</button>\r\n        <button onClick={onSocialClick} name=\"github\">Continue with Github</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Auth;","import React, { useState } from \"react\";\r\nimport { dbService, storageService } from \"../firebase\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Nweet = ({ nweetObj, isOwner }) => {\r\n  const [editing, setEditing] = useState(false);\r\n  const [newNweet, setNewNweet] = useState(nweetObj.text);\r\n  const onDeleteClick = async () => {\r\n    const ok = window.confirm(\"Are you sure you want to delete this nweet?\");\r\n    if (ok) {\r\n      await dbService.doc(`nweets/${nweetObj.id}`).delete();\r\n      await storageService.refFromURL(nweetObj.attachmentUrl).delete();\r\n        }\r\n  };\r\n  const toggleEditing = () => setEditing((prev) => !prev);\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    await dbService.doc(`nweets/${nweetObj.id}`).update({\r\n      text: newNweet,\r\n    });\r\n    setEditing(false);\r\n  };\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewNweet(value);\r\n  };\r\n  return (\r\n    <div className = \"nweet\">\r\n      {editing ? (\r\n        <>\r\n          <form onSubmit={onSubmit} className =\"container nweetEdit\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Edit your nweet\"\r\n              value={newNweet}\r\n              required\r\n              autoFocus\r\n              onChange={onChange}\r\n              className =\"formInput\"\r\n            />\r\n            <input type=\"submit\" value=\"Update Nweet\" className =\"formBtn\" />\r\n          </form>\r\n          <button onClick={toggleEditing} className = \"formBtn cancelBtn\">\r\n            Cancel\r\n          </button>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <h4>{nweetObj.text}</h4>\r\n          {nweetObj.attachmentUrl && <img src={nweetObj.attachmentUrl} />}\r\n          {isOwner && (\r\n            <div class=\"nweet__actions\">\r\n              <span onClick={onDeleteClick}>\r\n                <FontAwesomeIcon icon={faTrash} />\r\n              </span>\r\n              <span onClick={toggleEditing}>\r\n                <FontAwesomeIcon icon={faPencilAlt} />\r\n              </span>\r\n            </div>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Nweet;","    import React, { useState } from \"react\";\r\n    import { v4 as uuidv4 } from \"uuid\";\r\n    import { storageService, dbService } from \"../firebase\";\r\n    import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n    import { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n    const NweetFactory = ({ userObj }) => {\r\n    const [nweet, setNweet] = useState(\"\");\r\n    const [attachment, setAttachment] = useState(\"\");\r\n    const onSubmit = async (event) => {\r\n        if (nweet === \"\") {\r\n            return;\r\n        }\r\n        event.preventDefault();\r\n        let attachmentUrl = \"\";\r\n        if (attachment !== \"\") {\r\n        const attachmentRef = storageService\r\n            .ref()\r\n            .child(`${userObj.uid}/${uuidv4()}`);\r\n        const response = await attachmentRef.putString(attachment, \"data_url\");\r\n        attachmentUrl = await response.ref.getDownloadURL();\r\n        }\r\n        const nweetObj = {\r\n        text: nweet,\r\n        createdAt: Date.now(),\r\n        creatorId: userObj.uid,\r\n        attachmentUrl,\r\n        };\r\n        await dbService.collection(\"nweets\").add(nweetObj);\r\n        setNweet(\"\");\r\n        setAttachment(\"\");\r\n    };\r\n    const onChange = (event) => {\r\n        const {\r\n        target: { value },\r\n        } = event;\r\n        setNweet(value);\r\n    };\r\n    const onFileChange = (event) => {\r\n        const {\r\n        target: { files },\r\n        } = event;\r\n        const theFile = files[0];\r\n        const reader = new FileReader();\r\n        reader.onloadend = (finishedEvent) => {\r\n        const {\r\n            currentTarget: { result },\r\n        } = finishedEvent;\r\n        setAttachment(result);\r\n        };\r\n        reader.readAsDataURL(theFile);\r\n    };\r\n    const onClearAttachment = () => setAttachment(\"\");\r\n    return (\r\n        <form onSubmit={onSubmit} className=\"factoryForm\">\r\n            <div className=\"factoryInput__container\">\r\n                <input\r\n                    className=\"factoryInput__input\"\r\n                    value={nweet}\r\n                    onChange={onChange}\r\n                    type=\"text\"\r\n                    placeholder=\"What's on your mind?\"\r\n                    maxLength={120}\r\n                />\r\n                <input type=\"submit\" \r\n                value=\"&rarr;\" \r\n                className=\"factoryInput__arrow\" />\r\n            </div>\r\n            <label for=\"attach-file\" className=\"factoryInput__label\">\r\n                <span>Add photos</span>\r\n                <FontAwesomeIcon icon={faPlus} />\r\n            </label>\r\n            <input\r\n                id=\"attach-file\"\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                onChange={onFileChange}\r\n                style={{\r\n                    opacity: 0,\r\n                }}\r\n            />\r\n\r\n            {attachment && (\r\n                <div className=\"factoryForm__attachment\">\r\n                    <img\r\n                        src={attachment}\r\n                        style={{\r\n                            backgroundImage: attachment,\r\n                        }}\r\n                    />\r\n                    <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n                        <span>Remove</span>\r\n                        <FontAwesomeIcon icon={faTimes} />\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </form>\r\n    );\r\n    };\r\n    export default NweetFactory;","import { dbService, storageService } from '../firebase';\r\nimport React, { useEffect, useState } from 'react';\r\nimport Nweet  from '../components/nweet';\r\nimport NweetFactory from 'components/nweetFactory';\r\n\r\nconst Home = ({userObj}) => {\r\n  const [nweets, setNweets] = useState([]);\r\n\r\n  useEffect(() => {\r\n    dbService.collection(\"nweets\").onSnapshot((snapshot) => {\r\n      const nweetArray = snapshot.docs.map((doc) => ({\r\n        id: doc.id,\r\n        ...doc.data(),\r\n      }));\r\n      setNweets(nweetArray);\r\n    });\r\n  }, []);\r\n\r\n  return(\r\n    <div>\r\n      <NweetFactory userObj ={userObj} />\r\n      <div>\r\n        {nweets.map((nweet) => (\r\n          <Nweet\r\n          key={nweet.id}\r\n          nweetObj={nweet}\r\n          isOwner={nweet.creatorId === userObj.uid}\r\n        />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Home;","import React from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faTwitter} from \"@fortawesome/free-brands-svg-icons\";\r\nimport {faUser} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Navigation = ({ userObj }) => (\r\n  <nav>\r\n    <ul style ={{display: \"flex\", justifyContent: \"center\", marginTop: 50}}>\r\n      <li>\r\n        <Link to=\"/\" to=\"/\" style={{ marginRight: 10 }}>\r\n          <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\r\n        </Link>\r\n      </li>\r\n      <li>\r\n        <Link to=\"/profile\"style={{\r\n            marginLeft: 10,\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n            fontSize: 12,\r\n          }}\r\n        >\r\n          <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\r\n          <span style={{ marginTop: 10 }}>\r\n            {userObj.displayName\r\n              ? `${userObj.displayName}의 Profile`\r\n              : \"Profile\"}\r\n          </span>\r\n        </Link>\r\n      </li>\r\n    </ul>\r\n  </nav>\r\n);\r\nexport default Navigation;","import React from \"react\";\r\nimport {HashRouter as Router, Route, Switch, Redirect} from \"react-router-dom\";\r\nimport Profile from \"routes/profile\";\r\nimport Auth from \"../routes/auth\";\r\nimport Home from \"../routes/home\";\r\nimport Navigation from \"./navigation\";\r\n\r\n\r\nconst AppRouter = ({refreshUser, isLoggedIn, userObj}) => {\r\n  return (\r\n    <Router>\r\n      {isLoggedIn && <Navigation userObj={userObj}/>}\r\n      <Switch>\r\n        {isLoggedIn ? (\r\n          <>\r\n            <Route exact path=\"/\">\r\n              <Home userObj = {userObj} />\r\n            </Route>\r\n            <Route exact path=\"/profile\">\r\n              <Profile userObj={userObj} refreshUser={refreshUser} />\r\n            </Route>\r\n            <Redirect from =\"*\" to=\"/\"/>\r\n          </>\r\n        ) : (\r\n          <>\r\n          <Route exact path=\"/\">\r\n            <Auth />\r\n          </Route>\r\n          <Redirect from =\"*\" to=\"/\"/>\r\n          </>\r\n        )}\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\nexport default AppRouter;","import React, { useEffect, useState } from 'react';\r\nimport { authService } from '../firebase';\r\nimport AppRouter from './router';\r\n\r\nfunction App() {\r\n  const [init, setInit] = useState(false);\r\n  const [userObj, setUserObj] = useState(null);\r\n  useEffect(() => {\r\n    authService.onAuthStateChanged((user) => {\r\n      if (user) {\r\n        setUserObj({\r\n          displayName: user.displayName,\r\n          uid: user.uid,\r\n          updateProfile: (args) => user.updateProfile(args),\r\n        });\r\n      } else {\r\n        setUserObj(null);\r\n      }\r\n      setInit(true);\r\n    });\r\n  }, []);\r\n\r\n  const refreshUser = () => {\r\n    const user = authService.currentUser;\r\n    setUserObj({\r\n      displayName: user.displayName,\r\n      uid: user.uid,\r\n      updateProfile: (args) => user.updateProfile(args),\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {init ? (\r\n          <AppRouter\r\n          refreshUser={refreshUser}\r\n          isLoggedIn={Boolean(userObj)}\r\n          userObj={userObj}\r\n        />\r\n      ) : (\r\n        \"Initializing...\"\r\n      )}\r\n      <footer>&copy; {new Date().getFullYear()} Nwitter</footer>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App'; \r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n); \r\n\r\n"],"sourceRoot":""}